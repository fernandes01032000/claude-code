#!/bin/bash
# Script de Diagn√≥stico para Acesso Remoto
# Coleta informa√ß√µes necess√°rias para determinar viabilidade de acesso remoto

echo "=========================================================================="
echo "üîç DIAGN√ìSTICO DE ACESSO REMOTO - Sistema Linux"
echo "=========================================================================="
echo

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

print_section() { echo -e "\n${BLUE}=== $1 ===${NC}\n"; }
print_info() { echo -e "${GREEN}‚úì${NC} $1"; }
print_warning() { echo -e "${YELLOW}‚ö†${NC} $1"; }
print_error() { echo -e "${RED}‚úó${NC} $1"; }

# ============================================
# 1. INFORMA√á√ïES DE REDE
# ============================================
print_section "1. INFORMA√á√ïES DE REDE"

echo "üìç IP Local (Privado):"
hostname -I

echo -e "\nüìç IP P√∫blico (se acess√≠vel):"
IP_PUBLICO=$(curl -s --max-time 5 ifconfig.me 2>/dev/null)
if [ -n "$IP_PUBLICO" ]; then
    echo "$IP_PUBLICO"
else
    echo "(N√£o foi poss√≠vel obter)"
fi

echo -e "\nüìç Gateway/Roteador:"
ip route | grep default

echo -e "\nüìç Interface de Rede:"
ip addr show | grep -E "^[0-9]+:|inet "

# ============================================
# 2. SERVI√áO SSH
# ============================================
print_section "2. SERVI√áO SSH"

if systemctl is-active --quiet ssh 2>/dev/null || systemctl is-active --quiet sshd 2>/dev/null; then
    print_info "SSH est√° ATIVO"

    echo -e "\nüìã Status do SSH:"
    systemctl status ssh 2>/dev/null || systemctl status sshd 2>/dev/null | head -n 5

    echo -e "\nüîë Porta SSH:"
    ss -tlnp | grep ssh || ss -tln | grep :22
else
    print_warning "SSH n√£o est√° ativo ou n√£o foi detectado"
fi

# ============================================
# 3. FIREWALL
# ============================================
print_section "3. FIREWALL"

if command -v ufw &> /dev/null; then
    echo "üõ°Ô∏è UFW (Firewall):"
    sudo ufw status 2>/dev/null || echo "(Requer sudo para verificar)"
elif command -v firewall-cmd &> /dev/null; then
    echo "üõ°Ô∏è Firewalld:"
    sudo firewall-cmd --list-all 2>/dev/null || echo "(Requer sudo para verificar)"
else
    echo "‚ÑπÔ∏è Nenhum firewall conhecido detectado (ou sem sudo)"
fi

# ============================================
# 4. PORTAS ABERTAS
# ============================================
print_section "4. PORTAS ABERTAS (LISTENING)"

echo "üì° Portas TCP abertas:"
ss -tln | grep LISTEN | sort -n -k5

echo -e "\nüì° Portas acess√≠veis externamente (0.0.0.0):"
ss -tln | grep LISTEN | grep "0.0.0.0" | sort -n -k5

# ============================================
# 5. TESTES DE CONECTIVIDADE
# ============================================
print_section "5. TESTES DE CONECTIVIDADE"

echo "üåê Teste de ping ao gateway:"
GATEWAY=$(ip route | grep default | awk '{print $3}' | head -n1)
if [ -n "$GATEWAY" ]; then
    ping -c 2 -W 2 "$GATEWAY" >/dev/null 2>&1 && print_info "Gateway acess√≠vel" || print_warning "Gateway n√£o responde a ping"
fi

echo -e "\nüåê Teste de ping √† internet:"
ping -c 2 -W 2 8.8.8.8 >/dev/null 2>&1 && print_info "Internet acess√≠vel" || print_warning "Internet n√£o acess√≠vel"

echo -e "\nüåê Teste DNS:"
ping -c 2 -W 2 google.com >/dev/null 2>&1 && print_info "DNS funcionando" || print_warning "DNS n√£o funciona"

# ============================================
# 6. INFORMA√á√ïES DO SISTEMA
# ============================================
print_section "6. INFORMA√á√ïES DO SISTEMA"

echo "üíª Sistema Operacional:"
cat /etc/os-release | grep -E "^(NAME|VERSION)=" | head -n2

echo -e "\nüë§ Usu√°rio atual:"
echo "$(whoami)@$(hostname)"

echo -e "\nüîê Chave SSH p√∫blica (se existir):"
if [ -f ~/.ssh/id_rsa.pub ]; then
    print_info "Chave RSA encontrada"
    cat ~/.ssh/id_rsa.pub
elif [ -f ~/.ssh/id_ed25519.pub ]; then
    print_info "Chave ED25519 encontrada"
    cat ~/.ssh/id_ed25519.pub
else
    print_warning "Nenhuma chave SSH p√∫blica encontrada"
fi

# ============================================
# 7. VERIFICA√á√ÉO DE FERRAMENTAS
# ============================================
print_section "7. FERRAMENTAS DISPON√çVEIS"

check_tool() {
    if command -v $1 &> /dev/null; then
        print_info "$1 instalado"
    else
        print_warning "$1 N√ÉO instalado"
    fi
}

check_tool "ssh"
check_tool "curl"
check_tool "wget"
check_tool "nc"
check_tool "nmap"
check_tool "ngrok"

# ============================================
# 8. AN√ÅLISE E RECOMENDA√á√ïES
# ============================================
print_section "8. AN√ÅLISE E RECOMENDA√á√ïES"

echo "üìä An√°lise da situa√ß√£o:"
echo

# Verifica se est√° em rede privada
IP_LOCAL=$(hostname -I | awk '{print $1}')
if [[ $IP_LOCAL == 10.* ]] || [[ $IP_LOCAL == 172.* ]] || [[ $IP_LOCAL == 192.168.* ]]; then
    print_warning "IP Local √© PRIVADO ($IP_LOCAL)"
    echo "   ‚Üí Voc√™ est√° atr√°s de um roteador/NAT"
    echo "   ‚Üí Acesso direto via SSH N√ÉO √© poss√≠vel sem configura√ß√£o adicional"
    echo
    echo "üí° Op√ß√µes dispon√≠veis:"
    echo "   1. Port Forwarding no roteador (requer acesso administrativo)"
    echo "   2. Usar servi√ßo de t√∫nel (ngrok, localtunnel, cloudflare tunnel)"
    echo "   3. VPN (Tailscale, ZeroTier, WireGuard)"
    echo "   4. Proxy reverso (SSH via servidor intermedi√°rio)"
else
    print_info "IP Local parece ser P√öBLICO"
    echo "   ‚Üí Acesso SSH direto pode ser poss√≠vel"
fi

echo
if systemctl is-active --quiet ssh 2>/dev/null || systemctl is-active --quiet sshd 2>/dev/null; then
    print_info "SSH est√° rodando e pronto para conex√µes"
else
    print_error "SSH N√ÉO est√° rodando - precisa ser instalado/iniciado"
fi

echo
echo "=========================================================================="
echo "‚úÖ Diagn√≥stico completo! Veja as recomenda√ß√µes acima."
echo "=========================================================================="
